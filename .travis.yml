language: ruby
rvm:
- 2.6
- 2.5
- 2.4 # Keep this in sync with .rubocop.yml
# We test up to the latest version of Ruby here, and test these Ruby versions
# against all support ActiveRecord versions. One test will be "duplicated"
# below when we calculate code coverage, but I don't know how to avoid that and
# still test all combinations of Ruby and ActiveRecord.
before_script:
- psql -c 'create database order_as_specified_test;' -U postgres
- mysql -e 'CREATE DATABASE order_as_specified_test;'
script:
- bundle exec rspec
services:
- mysql
- postgresql
env:
  matrix:
  - ACTIVERECORD_VERSION="~> 5.2.0"
  - ACTIVERECORD_VERSION="~> 5.1.0"
  - ACTIVERECORD_VERSION="~> 5.0.0"
matrix:
  include:
  - rvm: 2.6
    script:
    - bundle exec rspec
    - gem install --no-document rubocop rubocop-rspec-focused && rubocop
    env:
    - CODE_COVERAGE=true
    - ACTIVERECORD_VERSION="~> 5.2.0"
branches:
  only:
  # We always run tests for PRs. This prevents running PR tests twice (once "for
  # the PR" and once "for the branch"), though we do want tests to run always
  # run on master.
  - master
notifications:
  email: false
  slack:
    secure: lVaScxPymqeYlTh+KlprWDK+O18BkQTyNSBTfzsLFzWF3Dy+p1rp2aeh0AhuLVYQDrlmFZ7cDMZ1ZYDyV2Y6lLtt+4ii7rATagI8R9WUVYb90C97tu1M6v5tpIjoTEOLx9hGc66heyvq1hNCKXbTqsqmrD69FYdjuXnOfrIs6J4=
